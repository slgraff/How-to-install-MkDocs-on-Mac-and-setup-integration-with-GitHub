{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"How to install MkDocs on Mac and setup the integration the GitHub pages? \u00b6 The project contains the simplified steps to setup MkDocs for your GitHub project. These are tools/functionalities for the two setups. Local setup \u00b6 brew Python 3 MkDocs MkDocs Material Extensions GitHub setup \u00b6 GitHub CI GitHub Pages GitHub Branch","title":"Overview"},{"location":"#how-to-install-mkdocs-on-mac-and-setup-the-integration-the-github-pages","text":"The project contains the simplified steps to setup MkDocs for your GitHub project. These are tools/functionalities for the two setups.","title":"How to install MkDocs on Mac and setup the integration the GitHub pages?"},{"location":"#local-setup","text":"brew Python 3 MkDocs MkDocs Material Extensions","title":"Local setup"},{"location":"#github-setup","text":"GitHub CI GitHub Pages GitHub Branch","title":"GitHub setup"},{"location":"steps/1-MkDocs-installation-on-Mac/","text":"MkDocs installation on Mac \u00b6 Step 1: Verify the brew installation \u00b6 brew --version Step 2: Change the folder permission to install python, if needed \u00b6 sudo chown -R $( whoami ) /usr/local/lib/pkgconfig chmod u+w /usr/local/lib/pkgconfig Step 3: Install python3 \u00b6 brew install python3 Step 4: Upgrade pip \u00b6 pip3 install --upgrade pip Step 5: Install mkdocs \u00b6 pip3 install mkdocs Step 6: Install the mkdocs-material-extensions \u00b6 python3 -m pip install mkdocs-material-extensions","title":"1 MkDocs installation on Mac"},{"location":"steps/1-MkDocs-installation-on-Mac/#mkdocs-installation-on-mac","text":"","title":"MkDocs installation on Mac"},{"location":"steps/1-MkDocs-installation-on-Mac/#step-1-verify-the-brew-installation","text":"brew --version","title":"Step 1: Verify the brew installation"},{"location":"steps/1-MkDocs-installation-on-Mac/#step-2-change-the-folder-permission-to-install-python-if-needed","text":"sudo chown -R $( whoami ) /usr/local/lib/pkgconfig chmod u+w /usr/local/lib/pkgconfig","title":"Step 2: Change the folder permission to install python, if needed"},{"location":"steps/1-MkDocs-installation-on-Mac/#step-3-install-python3","text":"brew install python3","title":"Step 3: Install python3"},{"location":"steps/1-MkDocs-installation-on-Mac/#step-4-upgrade-pip","text":"pip3 install --upgrade pip","title":"Step 4: Upgrade pip"},{"location":"steps/1-MkDocs-installation-on-Mac/#step-5-install-mkdocs","text":"pip3 install mkdocs","title":"Step 5: Install mkdocs"},{"location":"steps/1-MkDocs-installation-on-Mac/#step-6-install-the-mkdocs-material-extensions","text":"python3 -m pip install mkdocs-material-extensions","title":"Step 6: Install the mkdocs-material-extensions"},{"location":"steps/2-Verify-your-documentation-and-build-the-pages/","text":"Verify your documentation and build the pages \u00b6 Step 1: Ensure you have a mkdocs.yml file in place \u00b6 This is a example configuration : # Project information site_name: Your Project site_url: https://[YOUR_GITHUB_ID].github.io/[your-repository-name] site_author: Thomas S\u00fcdbr\u00f6cker # Repository repo_name: [YOUR-REPOSITORY-NAME] repo_url: https://github.com/[YOUR_GITHUB_ID]/[YOUR-REPOSITORY-NAME] edit_uri: edit/master/[YOU-DOCUMENTATION_FOLDER] docs_dir: [YOU-DOCUMENTATION_FOLDER] # Navigation nav: - Welcome: - Overview: README.md ## DO NOT CHANGE BELOW THIS LINE # Copyright # TBD # Theme theme: name: material font: text: IBM Plex Sans code: IBM Plex Mono icon: logo: material/library features: # - navigation.tabs - navigation.instant - navigation.expand palette: scheme: default primary: blue accent: blue # Plugins plugins: - search # Customization # TBD # Extensions markdown_extensions: - abbr - admonition - attr_list - def_list - footnotes - meta - toc: permalink: true - pymdownx.arithmatex: generic: true - pymdownx.betterem: smart_enable: all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji: emoji_index: !!python/name:materialx.emoji.twemoji emoji_generator: !!python/name:materialx.emoji.to_svg - pymdownx.highlight - pymdownx.inlinehilite - pymdownx.keys - pymdownx.mark - pymdownx.smartsymbols - pymdownx.snippets: check_paths: true - pymdownx.superfences: custom_fences: - name: mermaid class: mermaid format: !!python/name:pymdownx.superfences.fence_code_format - pymdownx.tabbed - pymdownx.tasklist: custom_checkbox: true - pymdownx.tilde Step 2: Preview your documentation locally \u00b6 python3 -m mkdocs serve Example output: INFO - Cleaning site directory INFO - Documentation built in 0 .57 seconds [ I 210125 09 :15:48 server:335 ] Serving on http://127.0.0.1:8000 INFO - Serving on http://127.0.0.1:8000 [ I 210125 09 :15:48 handlers:62 ] Start watching changes INFO - Start watching changes [ I 210125 09 :15:48 handlers:64 ] Start detecting changes INFO - Start detecting changes Step 3: Build the pages in the folder \"/site\", which will be added to your GitHub project \u00b6 python3 -m mkdocs build","title":"2 Verify your documentation and build the pages"},{"location":"steps/2-Verify-your-documentation-and-build-the-pages/#verify-your-documentation-and-build-the-pages","text":"","title":"Verify your documentation and build the pages"},{"location":"steps/2-Verify-your-documentation-and-build-the-pages/#step-1-ensure-you-have-a-mkdocsyml-file-in-place","text":"This is a example configuration : # Project information site_name: Your Project site_url: https://[YOUR_GITHUB_ID].github.io/[your-repository-name] site_author: Thomas S\u00fcdbr\u00f6cker # Repository repo_name: [YOUR-REPOSITORY-NAME] repo_url: https://github.com/[YOUR_GITHUB_ID]/[YOUR-REPOSITORY-NAME] edit_uri: edit/master/[YOU-DOCUMENTATION_FOLDER] docs_dir: [YOU-DOCUMENTATION_FOLDER] # Navigation nav: - Welcome: - Overview: README.md ## DO NOT CHANGE BELOW THIS LINE # Copyright # TBD # Theme theme: name: material font: text: IBM Plex Sans code: IBM Plex Mono icon: logo: material/library features: # - navigation.tabs - navigation.instant - navigation.expand palette: scheme: default primary: blue accent: blue # Plugins plugins: - search # Customization # TBD # Extensions markdown_extensions: - abbr - admonition - attr_list - def_list - footnotes - meta - toc: permalink: true - pymdownx.arithmatex: generic: true - pymdownx.betterem: smart_enable: all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji: emoji_index: !!python/name:materialx.emoji.twemoji emoji_generator: !!python/name:materialx.emoji.to_svg - pymdownx.highlight - pymdownx.inlinehilite - pymdownx.keys - pymdownx.mark - pymdownx.smartsymbols - pymdownx.snippets: check_paths: true - pymdownx.superfences: custom_fences: - name: mermaid class: mermaid format: !!python/name:pymdownx.superfences.fence_code_format - pymdownx.tabbed - pymdownx.tasklist: custom_checkbox: true - pymdownx.tilde","title":"Step 1: Ensure you have a mkdocs.yml file in place"},{"location":"steps/2-Verify-your-documentation-and-build-the-pages/#step-2-preview-your-documentation-locally","text":"python3 -m mkdocs serve Example output: INFO - Cleaning site directory INFO - Documentation built in 0 .57 seconds [ I 210125 09 :15:48 server:335 ] Serving on http://127.0.0.1:8000 INFO - Serving on http://127.0.0.1:8000 [ I 210125 09 :15:48 handlers:62 ] Start watching changes INFO - Start watching changes [ I 210125 09 :15:48 handlers:64 ] Start detecting changes INFO - Start detecting changes","title":"Step 2: Preview your documentation locally"},{"location":"steps/2-Verify-your-documentation-and-build-the-pages/#step-3-build-the-pages-in-the-folder-site-which-will-be-added-to-your-github-project","text":"python3 -m mkdocs build","title":"Step 3: Build the pages in the folder \"/site\", which will be added to your GitHub project"},{"location":"steps/3-Setup-the-integration-to-your-GitHub-project/","text":"Integrate the documentation with GitHub CI \u00b6 Step 1: Add folder to .gitignore \u00b6 echo \"site/\" >> .gitignore Step 2: Create a two folders in your project \u00b6 mkdir .github cd .github mkdir workflows Step 3: Create a file called ci.yml and insert the CI configuration \u00b6 name: ci on: push: branches: - main - master jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - uses: actions/setup-python@v2 with: python-version: 3.x - run: pip install mkdocs-material - run: mkdocs gh-deploy --force Step 4: Create a new branch in your GitHub project called for example gh-pages \u00b6 Step 5: Enable the GitHub pages on your project and select the branch gh-pages as source for your documentation \u00b6","title":"3 Setup the integration to your GitHub project"},{"location":"steps/3-Setup-the-integration-to-your-GitHub-project/#integrate-the-documentation-with-github-ci","text":"","title":"Integrate the documentation with GitHub CI"},{"location":"steps/3-Setup-the-integration-to-your-GitHub-project/#step-1-add-folder-to-gitignore","text":"echo \"site/\" >> .gitignore","title":"Step 1: Add folder to .gitignore"},{"location":"steps/3-Setup-the-integration-to-your-GitHub-project/#step-2-create-a-two-folders-in-your-project","text":"mkdir .github cd .github mkdir workflows","title":"Step 2: Create a two folders in your project"},{"location":"steps/3-Setup-the-integration-to-your-GitHub-project/#step-3-create-a-file-called-ciyml-and-insert-the-ci-configuration","text":"name: ci on: push: branches: - main - master jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - uses: actions/setup-python@v2 with: python-version: 3.x - run: pip install mkdocs-material - run: mkdocs gh-deploy --force","title":"Step 3: Create a file called ci.yml and insert the CI configuration"},{"location":"steps/3-Setup-the-integration-to-your-GitHub-project/#step-4-create-a-new-branch-in-your-github-project-called-for-example-gh-pages","text":"","title":"Step 4: Create a new branch in your GitHub project called for example gh-pages"},{"location":"steps/3-Setup-the-integration-to-your-GitHub-project/#step-5-enable-the-github-pages-on-your-project-and-select-the-branch-gh-pages-as-source-for-your-documentation","text":"","title":"Step 5: Enable the GitHub pages on your project and select the branch gh-pages as source for your documentation"}]}